// <auto-generated />
using System;
using HwaSrsApi.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HwaSrsApi.Migrations
{
    [DbContext(typeof(SrsContext))]
    partial class SrsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HwaSrsApi.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ActivationCondition")
                        .HasColumnType("text");

                    b.Property<int?>("CardTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CardTypeId");

                    b.HasIndex("CourseId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("HwaSrsApi.Models.CardProgress", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeSpan?>("Interval")
                        .HasColumnType("interval");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CardProgresses");
                });

            modelBuilder.Entity("HwaSrsApi.Models.CardReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Answer")
                        .HasColumnType("integer");

                    b.Property<int?>("CardProgressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateReviewed")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CardProgressId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("HwaSrsApi.Models.CardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Design")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<bool>("ReadOnce")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("CardTypes");
                });

            modelBuilder.Entity("HwaSrsApi.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("HwaSrsApi.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CardTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("CardTypeId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("HwaSrsApi.Models.FieldData", b =>
                {
                    b.Property<int>("CardId")
                        .HasColumnType("integer");

                    b.Property<int>("FieldId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("CardId", "FieldId");

                    b.HasIndex("FieldId");

                    b.ToTable("FieldDatas");
                });

            modelBuilder.Entity("HwaSrsApi.Models.Card", b =>
                {
                    b.HasOne("HwaSrsApi.Models.CardType", "CardType")
                        .WithMany("Cards")
                        .HasForeignKey("CardTypeId");

                    b.HasOne("HwaSrsApi.Models.Course", "Course")
                        .WithMany("Cards")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HwaSrsApi.Models.CardProgress", b =>
                {
                    b.HasOne("HwaSrsApi.Models.Card", "Card")
                        .WithOne("Progress")
                        .HasForeignKey("HwaSrsApi.Models.CardProgress", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HwaSrsApi.Models.CardReview", b =>
                {
                    b.HasOne("HwaSrsApi.Models.CardProgress", null)
                        .WithMany("ReviewHistory")
                        .HasForeignKey("CardProgressId");
                });

            modelBuilder.Entity("HwaSrsApi.Models.Field", b =>
                {
                    b.HasOne("HwaSrsApi.Models.CardType", "CardType")
                        .WithMany("Fields")
                        .HasForeignKey("CardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HwaSrsApi.Models.FieldData", b =>
                {
                    b.HasOne("HwaSrsApi.Models.Card", "Card")
                        .WithMany("Fields")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HwaSrsApi.Models.Field", "Field")
                        .WithMany()
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
